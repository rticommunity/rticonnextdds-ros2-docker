#!/bin/sh
################################################################################
# (c) 2022 Copyright, Real-Time Innovations, Inc. (RTI) All rights reserved.
# RTI grants Licensee a license to use, modify, compile, and create derivative
# works of the Software solely in combination with RTI Connext DDS. Licensee
# may redistribute copies of the Software provided that all such copies are
# subject to this License. The Software is provided "as is", with no warranty
# of any type, including any warranty for fitness for any purpose. RTI is
# under no obligation to maintain or support the Software. RTI shall not be
# liable for any incidental or consequential damages arising out of the use or
# inability to use the Software. For purposes of clarity, nothing in this
# License prevents Licensee from using alternate versions of DDS, provided
# that Licensee may not combine or link such alternate versions of DDS with
# the Software.
################################################################################

################################################################################
# Build a Docker image with ROS 2, RTI Connext DDS, and rmw_connextdds
#################################################################################
# The script uses the Dockerfile included in this repository, and it simplifies
# the build process by automatically generating a build context archive that
# collects all required files (e.g. Connext installers and license file).
#
# RTI Connext DDS can be provisioned inside the contained image in 3 ways.
#
# By default, the script will try to detect and use a host installation, by
# inspecting variables CONNEXTDDS_DIR, and NDDSHOME (in this order).
# If any of these variables is set to a non-empty value, the script will assume
# it points to a Connext installation. If  multiple target libraries are
# installed, you must specify the architecture to use with CONNEXTDDS_ARCH.
#
# If Connext is not installed on the host (or if you want to use a different
# version than the one used by the host), you may use the official
# installers provided by RTI to provision it inside the Docker image.
# Set variable CONNEXTDDS_FROM_RTIPKG to a non-empty value to use this mode.
#
# The location of the required files must be specified using variables
# CONNEXTDDS_INSTALLER_HOST, CONNEXTDDS_INSTALLER_TARGET, and
# CONNEXTDDS_INSTALLER_LICENSE.
#
# Finally, you can also use community-licensed version of Connext DDS which is
# distributed by Debian package rti-connext-dds-6.0.1.
# This image can only be used for pre-production and non-commercial purposes.
# In order to use it, set variable CONNEXTDDS_FROM_DEB to a non-empty value.
#
# The "name:tag" of the Docker image generated by the script can be customized
# using variable DOCKER_IMAGE.
#
# The script will automatically propagate variables whose name corresponds to
# build arguments in the Dockerfiles to the `docker build` command. See each
# Dockerfile for information on the accepted builds arguments.
# 
################################################################################
set -e
SH_DIR=$(cd "$(dirname "$0")" > /dev/null 2>&1 && pwd) 
REPO_DIR=$(cd "${SH_DIR}/.." && pwd)

# Load common helper functions
. "${SH_DIR}/common.sh"

: "${DOCKER_IMAGE:="rmw_connextdds:latest"}"
: "${DOCKER_DIR:=${REPO_DIR}/docker}"
: "${DOCKER_FILE_DEB:=${DOCKER_DIR}/Dockerfile.rmw_connextdds.deb}"
: "${DOCKER_FILE_RTIPKG:=${DOCKER_DIR}/Dockerfile.rmw_connextdds.rtipkg}"
: "${DOCKER_FILE_HOST:=${DOCKER_DIR}/Dockerfile.rmw_connextdds.host}"
: "${DOCKER_BUILD_TAG:=$(date +%s)}"
: "${DOCKER_BUILD_CONTEXT:=/tmp/rmw_connextdds-docker-ctx-${DOCKER_BUILD_TAG}}"

# Determine the method of installation for RTI Connext DDS:
# - If CONNEXTDDS_FROM_DEB, use Debian package-based installation
# - If CONNEXTDDS_FROM_RTIPKG, use official RTI installers.
# - Otherwise default to use host installation
DOCKER_FILE="${DOCKER_FILE_HOST}"
if [ -n "${CONNEXTDDS_FROM_DEB}" ]; then
  DOCKER_FILE="${DOCKER_FILE_DEB}"
elif [ -n "${CONNEXTDDS_FROM_RTIPKG}" ]; then
  DOCKER_FILE="${DOCKER_FILE_RTIPKG}"
fi

log_info "selected dockerfile: ${DOCKER_FILE}"

# The Dockerfiles expect all external files to be provided in the
# build context's "archives/" subdirectory. We achieve this by collecting
# all files into a temporary tar.gz archive.
# Create initial context with files shared by all images
rm -rf "${DOCKER_BUILD_CONTEXT}"
mkdir -p "${DOCKER_BUILD_CONTEXT}/archives"
cp "${DOCKER_FILE}" "${DOCKER_BUILD_CONTEXT}/Dockerfile"
create_docker_build_context "${DOCKER_BUILD_CONTEXT}"
rm -rf "${DOCKER_BUILD_CONTEXT}"

export_docker_build_arg DOCKER_BUILD_ARGS BASE_IMAGE
export_docker_build_arg DOCKER_BUILD_ARGS RMW_CONNEXTDDS_URL
export_docker_build_arg DOCKER_BUILD_ARGS RMW_CONNEXTDDS_BRANCH

case "${DOCKER_FILE}" in
  ${DOCKER_FILE_DEB})
    # Nothing else to do for this installation method
    ;;
  ${DOCKER_FILE_RTIPKG})
    # Detect paths of required files and add them to the context archive
    : "${CONNEXTDDS_INSTALLER_HOST:=${SH_CWD}/rti_connext_dds-6.1.0-pro-host-x64Linux.run}"
    : "${CONNEXTDDS_INSTALLER_TARGET:=${SH_CWD}/rti_connext_dds-6.1.0-pro-target-x64Linux4gcc7.3.0.rtipkg}"
    : "${CONNEXTDDS_INSTALLER_LICENSE:=${SH_CWD}/rti_license.dat}"

    add_to_docker_build_context "${DOCKER_BUILD_CONTEXT}.tar" \
      "${CONNEXTDDS_INSTALLER_HOST}" archives/
    add_to_docker_build_context "${DOCKER_BUILD_CONTEXT}.tar" \
      "${CONNEXTDDS_INSTALLER_TARGET}" archives/
    add_to_docker_build_context "${DOCKER_BUILD_CONTEXT}.tar" \
      "${CONNEXTDDS_INSTALLER_LICENSE}" archives/

    # The Dockerfiles expect the installer variables to only contain the file
    # names, so update the variables and export them as build arguments.
    CONNEXTDDS_INSTALLER_HOST=$(basename "${CONNEXTDDS_INSTALLER_HOST}")
    CONNEXTDDS_INSTALLER_TARGET=$(basename "${CONNEXTDDS_INSTALLER_TARGET}")
    CONNEXTDDS_INSTALLER_LICENSE=$(basename "${CONNEXTDDS_INSTALLER_LICENSE}")

    export_docker_build_arg DOCKER_BUILD_ARGS CONNEXTDDS_INSTALLER_HOST
    export_docker_build_arg DOCKER_BUILD_ARGS CONNEXTDDS_INSTALLER_TARGET
    export_docker_build_arg DOCKER_BUILD_ARGS CONNEXTDDS_INSTALLER_LICENSE
    export_docker_build_arg DOCKER_BUILD_ARGS CONNEXTDDS_VERSION
    export_docker_build_arg DOCKER_BUILD_ARGS CONNEXTDDS_ARCH
    ;;
  ${DOCKER_FILE_HOST})
    if [ -z "${CONNEXTDDS_DIR}" ]; then
      if [ -n "${NDDSHOME}" ]; then
        CONNEXTDDS_DIR="${NDDSHOME}"
      else
        log_error "no RTI Connext DDS installation detected.\n" >&2
        exit 1
      fi
    fi
    add_to_docker_build_context "${DOCKER_BUILD_CONTEXT}.tar" \
      "${CONNEXTDDS_DIR}" archives/

    CONNEXTDDS_HOST_DIR=$(basename "${CONNEXTDDS_DIR}")
    export_docker_build_arg DOCKER_BUILD_ARGS CONNEXTDDS_HOST_DIR
    export_docker_build_arg DOCKER_BUILD_ARGS CONNEXTDDS_ARCH
    ;;
esac

log_info "building rmw_connextdds docker image: ${DOCKER_IMAGE}"
(
  set -x
  docker build - \
    -t "${DOCKER_IMAGE}" ${DOCKER_BUILD_ARGS} < "${DOCKER_BUILD_CONTEXT}.tar"
)
